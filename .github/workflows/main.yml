# This is a basic workflow to help you get started with Actions

name: Build and Deploy to Web App for Containers

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  #pull_request:
    #branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

       # Authenticate a Service Principal to deploy to your Web App
      - name: Azure Service Principal Authentication
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Runs a set of commands using the runners shell
      # Use docker login to log into ACR 
      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
         # comment out the login-server parameter if using docker hub
          login-server: ${{ secrets.CONTAINER_REGISTRY_NAME }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

     # Build and push your image to Azure Container Registry 
      - name: Build and Push container to ACR
        run: |
          docker build --file=dotnetthanks/Dockerfile -t ${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.CONTAINER_REGISTRY_NAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}  

      - name: Deploy to Azure Web App for Containers
        # You may pin to the exact commit or the version.
        # uses: FrodeHus/azwebapp-container-action@67da4c2bbf5b1382a6fd1adfc54f8b3bfb3ef270
        uses: FrodeHus/azwebapp-container-action@v1
        with:
          # Service Principal with Contributor role on the Web App
          service_principal: dotnetthanks
          # Service Principal password
          service_principal_password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          # The tenant where all the web app resources are placed
          tenant: ${{ secrets.TENANT_ID }}
          # The name of the Azure Container Registry, minus the .azurecr.io
          registry: shayne
          # Docker image name
          image: ${{ secrets.IMAGE_NAME }}
          # Docker image tag
          tag: ${{ github.sha }}
          # Name of the Azure Web App for Containers instance
          webapp_name: ${{ secrets.APP_NAME }}
          # Name of the resource group with the web app resides
          resource_group: ${{ secrets.APP_NAME }}

        
        
